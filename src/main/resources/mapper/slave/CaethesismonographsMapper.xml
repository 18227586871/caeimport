<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.slave.dao.CaethesismonographsMapper">
  <resultMap id="BaseResultMap" type="com.example.slave.entity.Caethesismonographs">
    <id column="thesisMonographsId" jdbcType="VARCHAR" property="thesismonographsid" />
    <result column="selectedYear" jdbcType="VARCHAR" property="selectedyear" />
    <result column="candidateId" jdbcType="VARCHAR" property="candidateid" />
    <result column="candidateUUID" jdbcType="VARCHAR" property="candidateuuid" />
    <result column="thesisMonographsSn" jdbcType="INTEGER" property="thesismonographssn" />
    <result column="publishedYear" jdbcType="VARCHAR" property="publishedyear" />
    <result column="workName" jdbcType="VARCHAR" property="workname" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="majorCollaborators" jdbcType="VARCHAR" property="majorcollaborators" />
    <result column="publications" jdbcType="VARCHAR" property="publications" />
    <result column="relatedSituation" jdbcType="VARCHAR" property="relatedsituation" />
    <result column="majorContribution" jdbcType="VARCHAR" property="majorcontribution" />
    <result column="academicianId" jdbcType="VARCHAR" property="academicianid" />
    <result column="academicianUUID" jdbcType="VARCHAR" property="academicianuuid" />
    <result column="correspondingAuthor" jdbcType="VARCHAR" property="correspondingauthor" />
    <result column="firstAuthor" jdbcType="VARCHAR" property="firstauthor" />
    <result column="createBy" jdbcType="VARCHAR" property="createby" />
    <result column="updateBy" jdbcType="VARCHAR" property="updateby" />
    <result column="createDt" jdbcType="TIMESTAMP" property="createdt" />
    <result column="updateDt" jdbcType="TIMESTAMP" property="updatedt" />
    <result column="orgId" jdbcType="VARCHAR" property="orgid" />
    <result column="compId" jdbcType="VARCHAR" property="compid" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from caethesismonographs
    where thesisMonographsId = #{thesismonographsid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.slave.entity.Caethesismonographs">
    insert into caethesismonographs (thesisMonographsId, selectedYear, 
      candidateId, candidateUUID, thesisMonographsSn, 
      publishedYear, workName, `rank`, 
      majorCollaborators, publications, relatedSituation, 
      majorContribution, academicianId, academicianUUID, 
      correspondingAuthor, firstAuthor, createBy, 
      updateBy, createDt, updateDt, 
      orgId, compId)
    values (#{thesismonographsid,jdbcType=VARCHAR}, #{selectedyear,jdbcType=VARCHAR}, 
      #{candidateid,jdbcType=VARCHAR}, #{candidateuuid,jdbcType=VARCHAR}, #{thesismonographssn,jdbcType=INTEGER}, 
      #{publishedyear,jdbcType=VARCHAR}, #{workname,jdbcType=VARCHAR}, #{rank,jdbcType=VARCHAR}, 
      #{majorcollaborators,jdbcType=VARCHAR}, #{publications,jdbcType=VARCHAR}, #{relatedsituation,jdbcType=VARCHAR}, 
      #{majorcontribution,jdbcType=VARCHAR}, #{academicianid,jdbcType=VARCHAR}, #{academicianuuid,jdbcType=VARCHAR}, 
      #{correspondingauthor,jdbcType=VARCHAR}, #{firstauthor,jdbcType=VARCHAR}, #{createby,jdbcType=VARCHAR}, 
      #{updateby,jdbcType=VARCHAR}, #{createdt,jdbcType=TIMESTAMP}, #{updatedt,jdbcType=TIMESTAMP}, 
      #{orgid,jdbcType=VARCHAR}, #{compid,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.slave.entity.Caethesismonographs">
    update caethesismonographs
    set selectedYear = #{selectedyear,jdbcType=VARCHAR},
      candidateId = #{candidateid,jdbcType=VARCHAR},
      candidateUUID = #{candidateuuid,jdbcType=VARCHAR},
      thesisMonographsSn = #{thesismonographssn,jdbcType=INTEGER},
      publishedYear = #{publishedyear,jdbcType=VARCHAR},
      workName = #{workname,jdbcType=VARCHAR},
      `rank` = #{rank,jdbcType=VARCHAR},
      majorCollaborators = #{majorcollaborators,jdbcType=VARCHAR},
      publications = #{publications,jdbcType=VARCHAR},
      relatedSituation = #{relatedsituation,jdbcType=VARCHAR},
      majorContribution = #{majorcontribution,jdbcType=VARCHAR},
      academicianId = #{academicianid,jdbcType=VARCHAR},
      academicianUUID = #{academicianuuid,jdbcType=VARCHAR},
      correspondingAuthor = #{correspondingauthor,jdbcType=VARCHAR},
      firstAuthor = #{firstauthor,jdbcType=VARCHAR},
      createBy = #{createby,jdbcType=VARCHAR},
      updateBy = #{updateby,jdbcType=VARCHAR},
      createDt = #{createdt,jdbcType=TIMESTAMP},
      updateDt = #{updatedt,jdbcType=TIMESTAMP},
      orgId = #{orgid,jdbcType=VARCHAR},
      compId = #{compid,jdbcType=VARCHAR}
    where thesisMonographsId = #{thesismonographsid,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select thesisMonographsId, selectedYear, candidateId, candidateUUID, thesisMonographsSn, 
    publishedYear, workName, `rank`, majorCollaborators, publications, relatedSituation, 
    majorContribution, academicianId, academicianUUID, correspondingAuthor, firstAuthor, 
    createBy, updateBy, createDt, updateDt, orgId, compId
    from caethesismonographs
    where thesisMonographsId = #{thesismonographsid,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select thesisMonographsId, selectedYear, candidateId, candidateUUID, thesisMonographsSn, 
    publishedYear, workName, `rank`, majorCollaborators, publications, relatedSituation, 
    majorContribution, academicianId, academicianUUID, correspondingAuthor, firstAuthor, 
    createBy, updateBy, createDt, updateDt, orgId, compId
    from caethesismonographs
  </select>
</mapper>